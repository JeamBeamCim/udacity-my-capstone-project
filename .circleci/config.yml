version: 2.1

orbs:
  docker: circleci/docker@2.2.0
  aws-cli: circleci/aws-cli@1.4.0

jobs:
  init:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "app/requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            # - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            python3 -m venv .devops-capstone
            source .devops-capstone/bin/activate
            make install
      - save_cache:
          paths:
            - ./.devops-capstone
          key: v1-dependencies-{{ checksum "app/requirements.txt" }}
      - run:
          name: Run lint
          command: |
            source .devops-capstone/bin/activate
            make lint
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Install awscli and gettext-base
          command: |
            sudo pip3 install awscli
            sudo apt-get install gettext-base
      - run:
          name: Install aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
      - run:
          name: Install kubectl
          command: |
            curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Connect to cluster
          command: |
            aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
      - run:
          name: Prepare K8S template
          command: |
            rm -rf Cloudformation/.generated && mkdir -p Cloudformation/.generated
            for f in Cloudformation/deployment.yaml
              do
              envsubst < $f > "Cloudformation/.generated/$(basename $f)"
            done
      - run:
          name: Deploy
          command: |
            kubectl apply -f Cloudformation/.generated/
            kubectl get pod
workflows:
  default:
    jobs:
      - init        
      - docker/publish:
          matrix:
            parameters:
              image: [$DOCKER_USERNAME/capstone-project]
              path: [app]
              docker-context: [app]
              deploy: [true]
              tag: ['$(<app/VERSION.txt)', 'latest']
              update-description: [true]    
          requires: [init]
      - deploy:
          requires: [docker/publish]
